[{"E:\\Front-End-React\\fron-end\\src\\index.js":"1","E:\\Front-End-React\\fron-end\\src\\App.js":"2","E:\\Front-End-React\\fron-end\\src\\reportWebVitals.js":"3","E:\\Front-End-React\\fron-end\\src\\Components\\Headers\\Header.jsx":"4","E:\\Front-End-React\\fron-end\\src\\Components\\RegistrationForm\\RegistrationForm.js":"5","E:\\Front-End-React\\fron-end\\src\\Constant\\apiConstants.js":"6","E:\\Front-End-React\\fron-end\\src\\Components\\LoginForm\\LoginForm.jsx":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":1211,"mtime":1608566916599,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":368,"mtime":1608539117989,"results":"12","hashOfConfig":"9"},{"size":5101,"mtime":1608545283877,"results":"13","hashOfConfig":"9"},{"size":77,"mtime":1608542697530,"results":"14","hashOfConfig":"9"},{"size":2920,"mtime":1608566433320,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"g5z3tw",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Front-End-React\\fron-end\\src\\index.js",[],["32","33"],"E:\\Front-End-React\\fron-end\\src\\App.js",["34"],"E:\\Front-End-React\\fron-end\\src\\reportWebVitals.js",[],"E:\\Front-End-React\\fron-end\\src\\Components\\Headers\\Header.jsx",[],"E:\\Front-End-React\\fron-end\\src\\Components\\RegistrationForm\\RegistrationForm.js",["35"],"import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport './RegistrationForm.css';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {API_BASE_URL} from '../../Constant/apiConstants';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\n\r\nfunction RegistrationForm(props) {\r\n    const [state , setState] = useState({\r\n        email : \"\",\r\n        password : \"\",\r\n        confirmPassword: \"\",\r\n        successMessage: \"\"\r\n        \r\n    })\r\n    const handleChange = (e) => {\r\n        const {id , value} = e.target   \r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id] : value\r\n        }))\r\n    }\r\n    const sendDetailsToServer = () => {\r\n        if(state.email.length && state.password.length) {\r\n            \r\n            const payload={\r\n                \"user_data\": {\r\n                    \"email\": state.email,\r\n                    \"password\": state.password,\r\n                    \"confirm_password\": state.password\r\n                  }\r\n            }\r\n            axios.post(API_BASE_URL+'/auth/register', payload)\r\n            .then(function (response) {\r\n                if(!('error' in response.data)){\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        'successMessage' : 'Registration successful. Redirecting to home page..'\r\n                    }))\r\n                    NotificationManager.success(\"Registration successful.\", 'info');\r\n                    // redirectToHome();\r\n                   \r\n                } else{\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        'successMessage' : ''\r\n                    }));\r\n                    NotificationManager.warning(response.data['error'], 'info');\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });    \r\n        }else{\r\n            NotificationManager.warning('Email or password missing.', 'alert');\r\n        }\r\n          \r\n        \r\n    }\r\n    const redirectToHome = () => {\r\n        props.updateTitle('Home')\r\n        props.history.push('/home');\r\n    }\r\n    const redirectToLogin = () => {\r\n        props.updateTitle('Login')\r\n        props.history.push('/login'); \r\n    }\r\n    const handleSubmitClick = (e) => {\r\n        e.preventDefault();\r\n        if(state.password === state.confirmPassword) {\r\n            sendDetailsToServer()    \r\n        } else {\r\n            NotificationManager.warning('Passwords do not match', 'warning');\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\r\n            <form>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" \r\n                       className=\"form-control\" \r\n                       id=\"email\" \r\n                       aria-describedby=\"emailHelp\" \r\n                       placeholder=\"Enter email\" \r\n                       value={state.email}\r\n                       onChange={handleChange}\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"password\" \r\n                        placeholder=\"Password\"\r\n                        value={state.password}\r\n                        onChange={handleChange} \r\n                    />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"confirmPassword\" \r\n                        placeholder=\"Confirm Password\"\r\n                        value={state.confirmPassword}\r\n                        onChange={handleChange} \r\n                    />\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\"\r\n                    onClick={handleSubmitClick}\r\n                >\r\n                    Register\r\n                </button>\r\n            </form>\r\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\r\n                {state.successMessage}\r\n            </div>\r\n            <div className=\"mt-2\">\r\n                <span>Already have an account? </span>\r\n                <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span> \r\n            </div>\r\n            <NotificationContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(RegistrationForm);","E:\\Front-End-React\\fron-end\\src\\Constant\\apiConstants.js",[],"E:\\Front-End-React\\fron-end\\src\\Components\\LoginForm\\LoginForm.jsx",["36","37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":14,"column":10,"nodeType":"46","messageId":"47","endLine":14,"endColumn":22},{"ruleId":"44","severity":1,"message":"48","line":61,"column":11,"nodeType":"46","messageId":"47","endLine":61,"endColumn":25},{"ruleId":"44","severity":1,"message":"49","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":13},{"ruleId":"44","severity":1,"message":"50","line":4,"column":9,"nodeType":"46","messageId":"47","endLine":4,"endColumn":21},{"ruleId":"44","severity":1,"message":"51","line":23,"column":15,"nodeType":"46","messageId":"47","endLine":23,"endColumn":22},{"ruleId":"44","severity":1,"message":"48","line":29,"column":11,"nodeType":"46","messageId":"47","endLine":29,"endColumn":25},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","'redirectToHome' is assigned a value but never used.","'axios' is defined but never used.","'API_BASE_URL' is defined but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]